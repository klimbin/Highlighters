{"version":3,"sources":["components/CreateHighlightCard.js","constants/Signature.js","components/Highlight.js","constants/Input.js","components/SearchBar.js","components/Page.js","components/NewHighlightForm.js","components/ModalForm.js","components/App.js","serviceWorker.js","index.js"],"names":["CreateHighlightCard","showForm","this","props","react_default","a","createElement","className","onClick","aria-hidden","Component","Signature","href","Highlight","startOffset","endOffset","color","priority","Object","classCallCheck","createClass","key","value","concat","get","_startOffset","set","_endOffset","_color","_priority","HighlightPanel","renderHighlightBox","highlight","_this$props","_this","phrase","removeHighlight","classNames","style","backgroundColor","substring","_this2","_this$props2","highlights","length","components_CreateHighlightCard","constants_Signature","highlightBoxes","map","PHRASE","HIGHLIGHT_OBJECTS","INITIAL_STATE","query","SearchBar","possibleConstructorReturn","getPrototypeOf","call","onChange","event","setPhrase","setState","defineProperty","target","name","state","objectSpread","type","placeholder","Page","dangerouslySetInnerHTML","__html","start","end","rank","error","NewHighlightForm","onSubmit","preventDefault","_this$state","keys","addHighlight","parseInt","indexOf","_this$state2","isInvalid","isNaN","disabled","ModalForm","components_NewHighlightForm","pageText","highlightRender","displayForm","App","toConsumableArray","updateRenders","newHighlights","filter","h","renders","calculateRenders","newRender","getHighlightedText","preWrap","split","join","highlightKeys","components_SearchBar","components_Page","components_Highlight","components_ModalForm","inputLength","sort","b","spotsFilled","repeat","i","current","_ref","_ref2","sectionToConsider","firstOccurrence","push","lastOccurrence","lastIndexOf","nextOccurrence","string","sections","result","currentIndex","_sections$i","slicedToArray","section","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d189eff3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/**\n * This class is rendered in the highlight panel\n * to allow users to open the modal form window\n * and create a new highlight.\n *\n * @callback showForm - Callback to display modal to create highlight.\n */\nclass CreateHighlightCard extends Component {\n  render() {\n    const { showForm } = this.props;\n\n    return (\n      <div className=\"card text-center createHighlightContainer\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">\n            Create Highlight\n          </h5>\n          <div className=\"card-text\">\n            <button\n              className=\"btn btn-outline-dark\"\n              onClick={() => showForm(true)}\n            >\n              <span aria-hidden=\"true\">&#xFF0B;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default CreateHighlightCard;\n","import React from 'react';\n\n/**\n * Ascii art of a bunny.\n * @constant\n */\nconst BUNNY = '\\x7B\\\\\\x5F\\x5F\\x2F\\x7D\\n\\x28\\x20\\u2022\\x20\\x2E\\x20\\u2022\\x29\\n\\x2F\\x20\\x3E\\u2764\\uFE0F\\x20\\x75\\x20\\x77\\x61\\x6E\\x74\\x20\\x74\\x68\\x69\\x73\\x3F\\n\\n\\x7B\\\\\\x5F\\x5F\\x2F\\x7D\\n\\x28\\x20\\u2022\\x20\\x2D\\x20\\u2022\\x29\\n\\x2F\\x3E\\u2764\\uFE0F\\x20\\x68\\x65\\x72\\x65\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\x20\\x75\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\x20\\x67\\x6F\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\x20\\x75\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\uD83D\\uDC99\\x20\\x64\\x69\\x64\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\uD83D\\uDC99\\uD83D\\uDC9C\\x20\\x77\\x65\\x6C\\x6C\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\uD83D\\uDC99\\uD83D\\uDC9C\\uD83D\\uDC97\\x20\\x74\\x6F\\x64\\x61\\x79';\n\n/**\n * Signature that is rendered when there are no highlights.\n * @constant\n */\nconst Signature = () => {\n  return (\n    <div className=\"signature\">\n      <div className=\"text-center\">\n        No more highlights!\n      </div>\n      <pre>\n        {BUNNY}\n      </pre>\n      <br/>\n      <div>\n        made by <a href=\"https://github.com/klimbin\">kevin</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Signature;\n","import React, { Component } from 'react';\nimport CreateHighlightCard from './CreateHighlightCard';\nimport Signature from '../constants/Signature';\n\n/**\n * This class represents a highlight object.\n */\nconst Highlight = class {\n  /**\n   * Create a Highlight object.\n   * @param {number} startOffset - The startOffset value.\n   * @param {number} endOffset - The endOffset value.\n   * @param {string} color - The highlight color.\n   * @param {number} priority - The priority of the highlight.\n   */\n  constructor(startOffset, endOffset, color, priority) {\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n    this.color = color;\n    this.priority = priority;\n  }\n\n  /**\n   * @return {string} A string representing this Highlight object.\n   */\n  toString() {\n    return `Highlight: (${this.startOffset},${this.endOffset})` +\n          `, ${this.color}, priority = ${this.priority}`;\n  }\n\n  /**\n   * Get the startOffset value.\n   * @return {number} The startOffset value.\n   */\n  get startOffset() {\n    return this._startOffset;\n  }\n\n  /**\n   * Get the endOffset value.\n   * @return {number} The endOffset value.\n   */\n  get endOffset() {\n    return this._endOffset;\n  }\n\n  /**\n   * Get the color value.\n   * @return {string} The color value.\n   */\n  get color() {\n    return this._color;\n  }\n\n  /**\n   * Get the priority value.\n   * @return {number} The priority value.\n   */\n  get priority() {\n    return this._priority;\n  }\n\n  /**\n   * Set the startOffset value.\n   * @param {number} The startOffset value.\n   */\n  set startOffset(value) {\n    this._startOffset = value;\n  }\n\n  /**\n   * Set the endOffset value.\n   * @param {number} The endOffset value.\n   */\n  set endOffset(value) {\n    this._endOffset = value;\n  }\n\n  /**\n   * Set the color value.\n   * @param {string} The color value.\n   */\n  set color(value) {\n    this._color = value;\n  }\n\n  /**\n   * Set the priority value.\n   * @param {number} The priority value.\n   */\n  set priority(value) {\n    this._priority = value;\n  }\n};\n\n/**\n * This class renders boxes to represent each highlight object.\n * A button to create new highlight objects is also rendereded\n * at the bottom.\n *\n * @param {string} phrase - The phrase to be highlighted.\n * @param {Array.<Highlight>} highlights - The set of highlight objects.\n * @callback removeHighlight - Callback to delete a highlight.\n * @callback showForm - Callback to display modal to create highlight.\n */\nclass HighlightPanel extends Component {\n  /**\n   * This method takes a highlight object and\n   * returns a div representing the highlight.\n   *\n   * @param {Object.<Highlight>} highlight\n   */\n  renderHighlightBox = (highlight) => {\n    const { phrase, removeHighlight } = this.props;\n    const { startOffset, endOffset, color, priority } = highlight;\n    const classNames = ['card text-center render-' + priority]\n    const style = {backgroundColor: color};\n    return (\n      <div key={priority} className={classNames} style={style}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">\n            Priority {priority}\n          </h5>\n          <h6 className=\"card-subtitle\">\n            ({startOffset}, {endOffset})\n          </h6>\n          <div className=\"card-text\">\n            <p>\n              \"{phrase.substring(startOffset, endOffset)}\"\n            </p>\n            <button\n              className=\"btn btn-outline-dark\"\n              onClick={() => removeHighlight(priority)}\n            >\n              <span aria-hidden=\"true\">remove</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { highlights, showForm } = this.props;\n\n    if(highlights.length === 0) {\n      return (\n        <div className=\"rightContainer\">\n          <CreateHighlightCard showForm={showForm} />\n          <Signature />\n        </div>\n      )\n    }\n\n    const highlightBoxes = highlights.map(highlight =>\n      this.renderHighlightBox(highlight)\n    );\n\n    return (\n      <div className=\"rightContainer\">\n        <CreateHighlightCard showForm={showForm} />\n        { highlightBoxes }\n      </div>\n    );\n  }\n}\n\nexport default HighlightPanel;\nexport { Highlight };\n","import { Highlight } from '../components/Highlight';\n\n/**\n * The text of the page to search through.\n * @constant\n */\nconst PAGE_TEXT = `\nDear future self, it's me again\nYou will deliver new technology with an adorable puppy. Perfect!\nThe girl you buried way back when\nI see you gave into curiosity\nYou will deliver new technology with an adorable puppy. Perfect!\nMy life right now is going well\nI've time to spare as one can tell\nYou will deliver new technology with an adorable puppy. Perfect!\nBut you might just sense some trepidation too\nYou will deliver new technology with an adorable puppy. Perfect!\nNo one knows where they really want to go\nWhy we always stay inside\nAnd now it snows\nBut I bet you miss it all\nSo\nDo cars ever fly?\nHave you travelled time?\nYou will deliver new technology with an adorable puppy. Perfect!\nOr is it just the same old thing for you and I?\nI used to be fine because you always seemed so far away\nBut now I feel our paths getting closer each day\nYou'll find enclosed, a passport photograph\nThe headlines and a railcard\nIt's funny how physical us humans are\nYou will deliver new technology with an adorable puppy. Perfect!\nAhh-ahh-ahh-ahh\nBut I heard all the years'll leave you hurt\nEveryone you love disappears and nothing works\nPlease don't say you hate the world\nI hope that I won't\nYou will deliver new technology with an adorable puppy. Perfect!\nDo cars ever fly?\nHave you travelled time?\nOr is it just the same old thing for you and I?\nYou will deliver new technology with an adorable puppy. Perfect!\nI used to be fine because you always seemed so far away\nBut now I feel our paths getting closer each day\nIt's rather strange`;\n\n/**\n * The phrase to highlight.\n * @constant\n */\nconst PHRASE = 'You will deliver new technology with an adorable puppy. Perfect!';\n\n/**\n * The initial highlight objects to render.\n * @constant\n */\nconst HIGHLIGHT_OBJECTS = [\n  new Highlight(0, 31,'#ec98ae', 0),\n  new Highlight(24, 27, '#eccf98', 1),\n  new Highlight(4, 18, '#d9f593', 2),\n  new Highlight(19, 22, '#c6e5fa', 3),\n  new Highlight(17, 31, '#e8e8e8', 4),\n  new Highlight(40, 48, '#ee93f5', 5),\n  new Highlight(40, 55, '#59acff', 6),\n  new Highlight(37, 55, '#f9b8ae', 7),\n  new Highlight(56, 64, '#79ed6f', 8),\n  new Highlight(0, 64, '#f1f593', 9)\n];\n\nexport { PAGE_TEXT, PHRASE, HIGHLIGHT_OBJECTS };\n","import React, { Component } from 'react';\nimport { PHRASE } from '../constants/Input';\n\nconst INITIAL_STATE = {\n  query: PHRASE\n};\n\n/**\n * This class provides an input for users to create a\n * query on what phrase to look for within PAGE_TEXT.\n *\n * @callback setPhrase - Callback to update the search phrase.\n */\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE};\n  }\n\n  /** update the state with user's input */\n  onChange = (event) => {\n    const { setPhrase } = this.props;\n    this.setState({ [event.target.name]: event.target.value },\n      setPhrase(event.target.value));\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"searchBarContainer\">\n        <h6 className=\"searchBarLabel\">Query:</h6>\n        <input\n          name=\"query\"\n          value={query}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"search query\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\n\n/**\n * This class renders the text of the page.\n *\n * @param {string} value - The text to be rendered.\n */\nclass Page extends Component {\n  render() {\n    return(\n      <div className=\"leftContainer\">\n        <div className=\"text\">\n          <h4>Dear Future Self</h4>\n          <h6>\n            <a href=\"https://open.spotify.com/artist/6OqhFYFJDnBBHas02HopPT\">\n              Kero Kero Bonito\n            </a>\n          </h6>\n        </div>\n        <div className=\"text\"\n           dangerouslySetInnerHTML={{__html: this.props.value}}>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Page;\n","import React, { Component } from 'react';\nimport { Highlight } from './Highlight';\n\nconst INITIAL_STATE = {\n  start: '',\n  end: '',\n  color: '',\n  rank: '',\n  error: null\n};\n\n/**\n * This class handles the form to create new Highlight objects.\n *\n * @param {Array.<number>} keys - The set of highlight priorities.\n * @callback addHighlight - Callback to add a new highlight.\n */\nclass NewHighlightForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE};\n  }\n\n  /** update the state with user's input */\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { start, end, color, rank } = this.state;\n    const { keys, addHighlight } = this.props;\n    const priority = parseInt(rank);\n    if(keys.indexOf(priority) !== -1) {\n      this.setState({ error: \"Priority is already taken.\" });\n      return;\n    }\n    this.setState({ error: null });\n    const startOffset = parseInt(start);\n    const endOffset = parseInt(end);\n    addHighlight(new Highlight(startOffset, endOffset, color, priority));\n  }\n\n  render() {\n    const { start, end, color, rank, error } = this.state;\n    const isInvalid = isNaN(start) || isNaN(end) || !isNaN(color) || isNaN(rank)\n        || rank === '' || start === '' || color === '' || rank === '';\n    return (\n      <form className=\"text-center\" onSubmit={this.onSubmit}>\n        <input\n          name=\"start\"\n          value={start}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"start offset\"\n        />\n        <br/>\n        <input\n          name=\"end\"\n          value={end}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"end offset\"\n        />\n        <br/>\n        <input\n          name=\"color\"\n          value={color}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"color\"\n        />\n        <br/>\n        <input\n          name=\"rank\"\n          value={rank}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"priority\"\n        />\n        <br/>\n        <button\n          disabled={isInvalid}\n          type=\"submit\"\n          className=\"btn btn-outline-primary\"\n        >\n          Submit\n        </button>\n        <p className=\"mt-2 mb-0 text-danger\">{error}</p>\n      </form>\n    )\n  }\n}\n\nexport default NewHighlightForm;\n","import React, { Component } from 'react';\nimport NewHighlightForm from './NewHighlightForm';\n\n/**\n * This class is a container for the NewHighlightForm\n * component to create new highlight objects\n * of the App and NewHighlightForm components.\n *\n * @param {string} phrase - The phrase to be highlighted.\n * @param {Array.<number>} keys - The set of highlight priorities.\n * @callback addHighlight - Callback to add a new highlight.\n * @callback showForm - Callback to display modal to create highlight.\n */\nclass ModalForm extends Component {\n  render() {\n    const { phrase, keys, addHighlight, showForm } = this.props;\n\n    return (\n      <div className=\"fullPageContainer\">\n        <div className=\"modalContainer\">\n          <div className=\"addForm\">\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => showForm(false)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <h4>\n              Create New Highlight\n            </h4>\n            <div className=\"phraseInfo\">\n              <p>\n                Phrase: \"{phrase}\" (0,{phrase.length})\n              </p>\n            </div>\n            <NewHighlightForm keys={keys} addHighlight={addHighlight}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalForm;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport Page from './Page';\nimport HighlightPanel from './Highlight';\nimport ModalForm from './ModalForm';\nimport { PAGE_TEXT, PHRASE, HIGHLIGHT_OBJECTS } from '../constants/Input';\nimport './App.css';\n\nconst INITIAL_STATE = {\n  pageText: PAGE_TEXT,\n  phrase: PHRASE,\n  highlights: HIGHLIGHT_OBJECTS,\n  highlightRender: null,\n  displayForm: false\n};\n\n/**\n * This class will render the highlights for the phrase\n * on every occurrence in the pageText.\n */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE};\n  }\n\n  componentDidMount() {\n    this.updateRenders();\n  }\n\n  /**\n   * This method will update state to handle whether\n   * the ModalForm should be rendered.\n   *\n   * @param {boolean} value\n   */\n  showForm = (value) => {\n    this.setState({ displayForm: value });\n  }\n\n  /**\n   * This method takes a Highlight object\n   * and adds it to the App state.\n   *\n   * @param {Object.<Highlight>} highlight\n   */\n  addHighlight = (highlight) => {\n    const { highlights } = this.state;\n    this.setState({\n      highlights: [...highlights, highlight],\n      displayForm: false\n    }, this.updateRenders);\n  }\n\n  /**\n   * This method takes a key unique to a highlight object\n   * then removes the given highlight from the App state.\n   * Note that we use the highlight priority for the key.\n   *\n   * @param {number} key\n   */\n  removeHighlight = (key) => {\n    const { highlights } = this.state;\n    const newHighlights = highlights.filter((h) => h.priority !== key);\n    this.setState({ highlights: newHighlights }, this.updateRenders);\n  }\n\n  /**\n   * This method takes a string to search\n   * for within the PAGE_TEXT.\n   *\n   * @param {string} query\n   */\n  setPhrase = (query) => {\n    this.setState({ phrase: query }, this.updateRenders);\n  }\n\n  /**\n   * This method clears the previous renders\n   * and creates new highlight renders.\n   *\n   * @param {number} key\n   */\n  updateRenders = () => {\n    const { pageText, phrase, highlights } = this.state;\n    const renders = calculateRenders(phrase.length, highlights);\n    const newRender = getHighlightedText(phrase, renders);\n    const preWrap = `<pre>${pageText.split(phrase).join(newRender)}</pre>`;\n    this.setState({ highlightRender: preWrap });\n  }\n\n  render() {\n    const { phrase, highlights, highlightRender, displayForm } = this.state;\n    const highlightKeys = highlights.map((h) => h.priority);\n\n    if(displayForm) {\n      return(\n        <div>\n          <SearchBar setPhrase={this.setPhrase} />\n          <Page value={highlightRender} />\n          <HighlightPanel\n            phrase={phrase}\n            highlights={highlights}\n            removeHighlight={this.removeHighlight}\n            showForm={this.showForm}\n          />\n          <ModalForm\n            phrase={phrase}\n            keys={highlightKeys}\n            addHighlight={this.addHighlight}\n            showForm={this.showForm}\n          />\n        </div>\n      )\n    }\n\n    return(\n      <div>\n        <SearchBar setPhrase={this.setPhrase} />\n        <Page value={highlightRender} setPhrase={this.setPhrase}/>\n        <HighlightPanel\n          phrase={phrase}\n          highlights={highlights}\n          removeHighlight={this.removeHighlight}\n          showForm={this.showForm}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n/**\n * This function takes an array of highlight objects and\n * and normalizes the ranges to create a set of highlight\n * renders without any overlapping.\n *\n * Highlight renders are arrays represented by [start, end, color, priority].\n *\n * @param {number} inputLength - The length of the phrase to be highlighted.\n * @param {Array.<Highlight>} highlights - A set of highlight objects.\n *\n * @return {Array.<Array.<Number, Number, String, Number>>} An array of highlight renders.\n */\nconst calculateRenders = (inputLength, highlights) => {\n  // sort highlights from top to bottom by their priority\n  // note that lower numbers are higher in priority\n  highlights.sort((a,b) => a.priority - b.priority);\n\n  // renders will store set of highlight objects that do not overlap\n  let renders = [];\n\n  // this string will represent which indices are already highlighted\n  let spotsFilled = '0'.repeat(inputLength);\n\n  for (let i = 0; i < highlights.length; i++) {\n    let current = highlights[i];\n    let [start, end] = [current.startOffset, current.endOffset];\n\n    // ignore current highlight if it does not have a valid range\n    if(start >= end || end <= 0 || start >= inputLength) {\n      continue;\n    }\n    if(start < 0) {\n      start = 0;\n    }\n    if(end > inputLength) {\n      end = inputLength;\n    }\n\n    let [color, priority] = [current.color, current.priority];\n    let sectionToConsider = spotsFilled.substring(start, end);\n    let firstOccurrence = sectionToConsider.indexOf('1');\n\n    if(firstOccurrence === -1) {\n      // no overlaps with other highlights\n      renders.push([start, end, color, priority]);\n    }\n    else {\n      // there is overlapping with other highlight(s)\n      if(firstOccurrence > 0) {\n        renders.push([start, start+firstOccurrence, color, priority]);\n      }\n\n      let lastOccurrence = sectionToConsider.lastIndexOf('1');\n\n      // handle cases of multiple highlight overlaps\n      let nextOccurrence = sectionToConsider.indexOf('1', firstOccurrence+1);\n      while(nextOccurrence !== -1) {\n        if(nextOccurrence - firstOccurrence > 1) {\n          renders.push([start+firstOccurrence+1, start+nextOccurrence, color, priority]);\n        }\n        firstOccurrence = nextOccurrence;\n        nextOccurrence = sectionToConsider.indexOf('1', firstOccurrence+1);\n      }\n\n      if(lastOccurrence < sectionToConsider.length-1) {\n        renders.push([start+lastOccurrence+1, end, color, priority]);\n      }\n    }\n    spotsFilled = spotsFilled.substring(0, start) + '1'.repeat(end-start) + spotsFilled.substring(end);\n  }\n  return renders;\n}\n\n/**\n * This function takes a set of highlight renders\n * and returns HTML code to represent the highlights.\n * The highlight renders must not have overlaps.\n *\n * @param {string} string - The phrase to be highlighted.\n * @param {Array.<Array.<Number, Number, String, Number>>} sections\n *\n * Highlight renders are represented by [start, end, color, priority].\n *\n * @return {string} HTML markup representing the highlighted phrase.\n */\nconst getHighlightedText = (string, sections) => {\n  // sort sections by increasing startOffset\n  sections.sort((a,b) => a[0] - b[0]);\n\n  // append each section with their highlights\n  let result = [];\n  let currentIndex = 0;\n  for(let i = 0; i < sections.length; i++) {\n    let [start, end, color, priority] = sections[i];\n    let section = string.substring(currentIndex, start);\n    section += `<span class=\"render-${priority}\"` +\n               ` style=\"background-color:${color}\">` +\n               `${string.substring(start, end)}</span>`;\n    result.push(section);\n    currentIndex = end;\n  }\n  result.push(string.substring(currentIndex));\n  return result.join('');\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}