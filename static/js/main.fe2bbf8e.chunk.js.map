{"version":3,"sources":["components/Page.js","components/CreateHighlight.js","constants/Signature.js","components/Highlight.js","components/AddForm.js","constants/Input.js","components/ModalForm.js","components/App.js","serviceWorker.js","index.js"],"names":["Page","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","this","props","value","Component","CreateHighlight","_this","onClick","showForm","aria-hidden","Signature","href","Highlight","startOffset","endOffset","color","priority","Object","classCallCheck","createClass","key","concat","get","_startOffset","set","_endOffset","_color","_priority","HighlightPanel","renderHighlightBox","highlight","phrase","classNames","style","backgroundColor","substring","removeHighlight","_this2","highlights","length","constants_Signature","components_CreateHighlight","highlightBoxes","map","INITIAL_STATE","start","end","rank","error","AddForm","possibleConstructorReturn","getPrototypeOf","call","onChange","event","setState","defineProperty","target","name","onSubmit","preventDefault","_this$state","state","_this$props","keys","addHighlight","parseInt","indexOf","objectSpread","_this$state2","isInvalid","isNaN","type","placeholder","disabled","PHRASE","HIGHLIGHT_OBJECTS","ModalForm","components_AddForm","pageText","highlightRender","displayForm","App","toConsumableArray","updateRenders","newHighlights","filter","h","renders","calculateRenders","newRender","getHighlightedText","split","join","highlightKeys","components_Page","components_Highlight","components_ModalForm","inputLength","sort","b","spotsFilled","repeat","i","current","_ref","_ref2","sectionToConsider","firstOccurrence","push","lastOccurrence","lastIndexOf","nextOccurrence","string","sections","result","currentIndex","_sections$i","slicedToArray","section","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe2bbf8e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Page extends Component {\n  render() {\n    return(\n      <div className=\"leftContainer\">\n        <p className=\"text\"\n           dangerouslySetInnerHTML={{__html: this.props.value}}>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Page;\n","import React, { Component } from 'react';\n\n/**\n * This class is rendered in the highlight panel\n * and allows users to open the modal form window\n * to create a new highlight.\n */\nclass CreateHighlight extends Component {\n  render() {\n    return (\n      <div className=\"card text-center createHighlightContainer\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">\n            Create Highlight\n          </h5>\n          <div className=\"card-text\">\n            <button\n              className=\"btn btn-outline-dark\"\n              onClick={() => this.props.showForm(true)}\n            >\n              <span aria-hidden=\"true\">+</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default CreateHighlight;\n","import React from 'react';\n\n/**\n * Ascii art of a bunny.\n * @constant\n */\nconst BUNNY = '\\x7B\\\\\\x5F\\x5F\\x2F\\x7D\\n\\x28\\x20\\u2022\\x20\\x2E\\x20\\u2022\\x29\\n\\x2F\\x20\\x3E\\u2764\\uFE0F\\x20\\x75\\x20\\x77\\x61\\x6E\\x74\\x20\\x74\\x68\\x69\\x73\\x3F\\n\\n\\x7B\\\\\\x5F\\x5F\\x2F\\x7D\\n\\x28\\x20\\u2022\\x20\\x2D\\x20\\u2022\\x29\\n\\x2F\\x3E\\u2764\\uFE0F\\x20\\x68\\x65\\x72\\x65\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\x20\\x75\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\x20\\x67\\x6F\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\x20\\x75\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\uD83D\\uDC99\\x20\\x64\\x69\\x64\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\uD83D\\uDC99\\uD83D\\uDC9C\\x20\\x77\\x65\\x6C\\x6C\\n\\x20\\x20\\x20\\u2764\\uFE0F\\uD83E\\uDDE1\\uD83D\\uDC9B\\uD83D\\uDC9A\\uD83D\\uDC99\\uD83D\\uDC9C\\uD83D\\uDC97\\x20\\x74\\x6F\\x64\\x61\\x79';\n\n/**\n * Signature that is rendered when there are no highlights.\n * @constant\n */\nconst Signature = () => {\n  return (\n    <div>\n      <div className=\"text-center\">\n        No more highlights!\n      </div>\n      <pre>\n        {BUNNY}\n      </pre>\n      <br/>\n      <div>\n        made by <a href=\"https://github.com/klimbin\">kevin</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Signature;\n","import React, { Component } from 'react';\nimport CreateHighlight from './CreateHighlight';\nimport Signature from '../constants/Signature';\n\n/**\n * This class represents a highlight object.\n */\nconst Highlight = class {\n  /**\n   * Create a Highlight object.\n   * @param {number} startOffset - The startOffset value.\n   * @param {number} endOffset - The endOffset value.\n   * @param {string} color - The highlight color.\n   * @param {number} priority - The priority of the highlight.\n   */\n  constructor(startOffset, endOffset, color, priority) {\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n    this.color = color;\n    this.priority = priority;\n  }\n\n  /**\n   * @return {string} A string representing this Highlight object.\n   */\n  toString() {\n    return `Highlight: (${this.startOffset},${this.endOffset})` +\n          `, ${this.color}, priority = ${this.priority}`;\n  }\n\n  /**\n   * Get the startOffset value.\n   * @return {number} The startOffset value.\n   */\n  get startOffset() {\n    return this._startOffset;\n  }\n\n  /**\n   * Get the endOffset value.\n   * @return {number} The endOffset value.\n   */\n  get endOffset() {\n    return this._endOffset;\n  }\n\n  /**\n   * Get the color value.\n   * @return {string} The color value.\n   */\n  get color() {\n    return this._color;\n  }\n\n  /**\n   * Get the priority value.\n   * @return {number} The priority value.\n   */\n  get priority() {\n    return this._priority;\n  }\n\n  /**\n   * Set the startOffset value.\n   * @param {number} The startOffset value.\n   */\n  set startOffset(value) {\n    this._startOffset = value;\n  }\n\n  /**\n   * Set the endOffset value.\n   * @param {number} The endOffset value.\n   */\n  set endOffset(value) {\n    this._endOffset = value;\n  }\n\n  /**\n   * Set the color value.\n   * @param {string} The color value.\n   */\n  set color(value) {\n    this._color = value;\n  }\n\n  /**\n   * Set the priority value.\n   * @param {number} The priority value.\n   */\n  set priority(value) {\n    this._priority = value;\n  }\n};\n\n/**\n * This class renders boxes to represent each highlight object.\n * A button to create new highlight objects is also rendereded\n * at the bottom.\n */\nclass HighlightPanel extends Component {\n  /**\n   * This method takes a highlight object and\n   * returns a div representing the highlight.\n   *\n   * @param {Object.<Highlight>} highlight\n   */\n  renderHighlightBox = (highlight) => {\n    const phrase = this.props.phrase;\n    const {startOffset, endOffset, color, priority} = highlight;\n    const classNames = ['card text-center render-' + priority]\n    const style = {backgroundColor: color};\n    return (\n      <div key={priority} className={classNames} style={style}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">\n            Highlight {priority}\n          </h5>\n          <h6 className=\"card-subtitle\">\n            ({startOffset}, {endOffset})\n          </h6>\n          <div className=\"card-text\">\n            <p>\n              \"{phrase.substring(startOffset, endOffset)}\"\n            </p>\n            <button\n              className=\"btn btn-outline-dark\"\n              onClick={() => this.props.removeHighlight(priority)}\n            >\n              <span aria-hidden=\"true\">remove</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const highlights = this.props.highlights;\n    if(highlights.length === 0) {\n      return (\n        <div className=\"rightContainer\">\n          <Signature />\n          <CreateHighlight showForm={this.props.showForm} />\n        </div>\n      )\n    }\n\n    const highlightBoxes = highlights.map(highlight =>\n      this.renderHighlightBox(highlight)\n    );\n\n    return (\n      <div className=\"rightContainer\">\n        { highlightBoxes }\n        <CreateHighlight showForm={this.props.showForm} />\n      </div>\n    );\n  }\n}\n\nexport default HighlightPanel;\nexport { Highlight };\n","import React, { Component } from 'react';\nimport { Highlight } from './Highlight';\n\nconst INITIAL_STATE = {\n  start: '',\n  end: '',\n  color: '',\n  rank: '',\n  error: null\n};\n\n/**\n *  This class handles the form to create new Highlight objects.\n */\nclass AddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE};\n  }\n\n  /** update the state with user's input */\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { start, end, color, rank } = this.state;\n    const { keys, addHighlight } = this.props;\n    const priority = parseInt(rank);\n    if(keys.indexOf(priority) !== -1) {\n      this.setState({ error: \"Priority is already taken.\" });\n      return;\n    }\n    this.setState({ error: null });\n    const startOffset = parseInt(start);\n    const endOffset = parseInt(end);\n    addHighlight(new Highlight(startOffset, endOffset, color, priority));\n  }\n\n  render() {\n    const { start, end, color, rank, error } = this.state;\n    const isInvalid = isNaN(start) || isNaN(end) || !isNaN(color) || isNaN(rank);\n    return (\n      <form className=\"text-center\" onSubmit={this.onSubmit}>\n        <input\n          name=\"start\"\n          value={start}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"start offset\"\n        />\n        <br/>\n        <input\n          name=\"end\"\n          value={end}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"end offset\"\n        />\n        <br/>\n        <input\n          name=\"color\"\n          value={color}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"color\"\n        />\n        <br/>\n        <input\n          name=\"rank\"\n          value={rank}\n          onChange={this.onChange}\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"priority\"\n        />\n        <br/>\n        <button\n          disabled={isInvalid}\n          type=\"submit\"\n          className=\"btn btn-outline-primary\"\n        >\n          Submit\n        </button>\n        <p className=\"mt-2 mb-0 text-danger\">{error}</p>\n      </form>\n    )\n  }\n}\n\nexport default AddForm;\n","import { Highlight } from '../components/Highlight';\n\n/**\n * The text of the page to search through.\n * @constant\n */\nconst PAGE_TEXT = `<h4>Dear Future Self</h4>\n  <h6>\n    <a href=\"https://open.spotify.com/artist/6OqhFYFJDnBBHas02HopPT\">\n      Kero Kero Bonito\n    </a>\n  </h6>\n  Dear future self, it's me again</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  The girl you buried way back when</br>\n  I see you gave into curiosity</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  My life right now is going well</br>\n  I've time to spare as one can tell</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  But you might just sense some trepidation too</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  No one knows where they really want to go</br>\n  Why we always stay inside</br>\n  And now it snows</br>\n  But I bet you miss it all</br>\n  So</br>\n  Do cars ever fly?</br>\n  Have you travelled time?</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  Or is it just the same old thing for you and I?</br>\n  I used to be fine because you always seemed so far away</br>\n  But now I feel our paths getting closer each day</br>\n  You'll find enclosed, a passport photograph</br>\n  The headlines and a railcard</br>\n  It's funny how physical us humans are</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  Ahh-ahh-ahh-ahh</br>\n  But I heard all the years'll leave you hurt</br>\n  Everyone you love disappears and nothing works</br>\n  Please don't say you hate the world</br>\n  I hope that I won't</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  Do cars ever fly?</br>\n  Have you travelled time?</br>\n  Or is it just the same old thing for you and I?</br>\n  You will deliver new technology with an adorable puppy. Perfect!</br>\n  I used to be fine because you always seemed so far away</br>\n  But now I feel our paths getting closer each day</br>\n  It's rather strange`;\n\n/**\n * The phrase to highlight.\n * @constant\n */\nconst PHRASE = 'You will deliver new technology with an adorable puppy. Perfect!';\n\n/**\n * The initial highlight objects to render.\n * @constant\n */\nconst HIGHLIGHT_OBJECTS = [\n  new Highlight(0, 31,'#ec98ae', 0),\n  new Highlight(24, 27, '#eccf98', 1),\n  new Highlight(4, 18, '#d9f593', 2),\n  new Highlight(19, 22, '#e8e8e8', 3),\n  new Highlight(17, 31, '#c6e5fa', 4),\n  new Highlight(40, 48, '#d9f593', 5),\n  new Highlight(40, 55, '#ee93f5', 6),\n  new Highlight(37, 55, '#c6e5fa', 7),\n  new Highlight(56, 64, '#eccf98', 8),\n  new Highlight(-20, 100, 'yellow', 9)\n];\n\nexport { PAGE_TEXT, PHRASE, HIGHLIGHT_OBJECTS };\n","import React, { Component } from 'react';\nimport AddForm from './AddForm';\nimport { PHRASE } from '../constants/Input';\n\n/**\n * This class is a container for the AddForm\n * component to create new highlight objects\n * of the App and AddForm components.\n */\nclass ModalForm extends Component {\n  render() {\n    const { keys, addHighlight } = this.props;\n\n    return (\n      <div className=\"fixedContainer\">\n        <div className=\"addFormContainer\">\n          <div className=\"addForm\">\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={() => this.props.showForm(false)}>\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <h4>\n              Create New Highlight\n            </h4>\n            <div className=\"phraseInfo\">\n              <p>\n                Phrase: {PHRASE} (0,{PHRASE.length})\n              </p>\n            </div>\n            <AddForm keys={keys} addHighlight={addHighlight}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalForm;\n","import React, { Component } from 'react';\nimport Page from './Page';\nimport HighlightPanel from './Highlight';\nimport ModalForm from './ModalForm';\nimport { PAGE_TEXT, PHRASE, HIGHLIGHT_OBJECTS } from '../constants/Input';\nimport './App.css';\n\nconst INITIAL_STATE = {\n  pageText: PAGE_TEXT,\n  phrase: PHRASE,\n  highlights: HIGHLIGHT_OBJECTS,\n  highlightRender: null,\n  displayForm: false\n};\n\n/**\n * This class will render the highlights for the phrase\n * on every occurrence in the pageText.\n */\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE};\n  }\n\n  componentDidMount() {\n    this.updateRenders();\n  }\n\n  /**\n   * This method will update state to handle whether\n   * the ModalForm should be rendered.\n   *\n   * @param {boolean} value\n   */\n  showForm = (value) => {\n    this.setState({ displayForm: value });\n  }\n\n  /**\n   * This method takes a Highlight object\n   * and adds it to the App state.\n   *\n   * @param {Object.<Highlight>} highlight\n   */\n  addHighlight = (highlight) => {\n    const { highlights } = this.state;\n    this.setState({\n      highlights: [...highlights, highlight],\n      displayForm: false\n    }, this.updateRenders);\n  }\n\n  /**\n   * This method takes a key unique to a highlight object\n   * then removes the given highlight from the App state.\n   * Note that we use the highlight priority for the key.\n   *\n   * @param {number} key\n   */\n  removeHighlight = (key) => {\n    const { highlights } = this.state;\n    const newHighlights = highlights.filter((h) => h.priority !== key);\n    this.setState({ highlights: newHighlights }, this.updateRenders);\n  }\n\n  /**\n   * This method clears the previous renders\n   * and creates new highlight renders.\n   *\n   * @param {number} key\n   */\n  updateRenders = () => {\n    const { pageText, phrase, highlights } = this.state;\n    const renders = calculateRenders(phrase.length, highlights);\n    const newRender = getHighlightedText(phrase, renders);\n    this.setState({ highlightRender: pageText.split(phrase).join(newRender) });\n  }\n\n  render() {\n    const { phrase, highlights, highlightRender, displayForm } = this.state;\n    const highlightKeys = highlights.map((h) => h.priority);\n\n    if(displayForm) {\n      return(\n        <div>\n          <Page value={highlightRender} />\n          <HighlightPanel\n            phrase={phrase}\n            highlights={highlights}\n            removeHighlight={this.removeHighlight}\n            showForm={this.showForm}\n          />\n          <ModalForm\n            keys={highlightKeys}\n            addHighlight={this.addHighlight}\n            showForm={this.showForm}\n          />\n        </div>\n      )\n    }\n\n    return(\n      <div>\n        <Page value={highlightRender} />\n        <HighlightPanel\n          phrase={phrase}\n          highlights={highlights}\n          removeHighlight={this.removeHighlight}\n          showForm={this.showForm}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n/**\n * This function takes an array of highlight objects and\n * and normalizes the ranges to create a set of highlight\n * renders without any overlapping.\n *\n * Highlight renders are arrays represented by [start, end, color, priority].\n *\n * @param {number} inputLength - The length of the phrase to be highlighted.\n * @param {Array.<Highlight>} highlights - A set of highlight objects.\n *\n * @return {Array.<Array.<Number, Number, String, Number>>} An array of highlight renders.\n */\nconst calculateRenders = (inputLength, highlights) => {\n  // sort highlights from top to bottom by their priority\n  // note that lower numbers are higher in priority\n  highlights.sort((a,b) => a.priority - b.priority);\n\n  // renders will store set of highlight objects that do not overlap\n  let renders = [];\n\n  // this string will represent which indices are already highlighted\n  let spotsFilled = '0'.repeat(inputLength);\n\n  for (let i = 0; i < highlights.length; i++) {\n    let current = highlights[i];\n    let [start, end] = [current.startOffset, current.endOffset];\n\n    // ignore current highlight if it does not have a valid range\n    if(start >= end || end <= 0 || start >= inputLength) {\n      continue;\n    }\n    if(start < 0) {\n      start = 0;\n    }\n    if(end > inputLength) {\n      end = inputLength;\n    }\n\n    let [color, priority] = [current.color, current.priority];\n    let sectionToConsider = spotsFilled.substring(start, end);\n    let firstOccurrence = sectionToConsider.indexOf('1');\n\n    if(firstOccurrence === -1) {\n      // no overlaps with other highlights\n      renders.push([start, end, color, priority]);\n    }\n    else {\n      // there is overlapping with other highlight(s)\n      if(firstOccurrence > 0) {\n        renders.push([start, start+firstOccurrence, color, priority]);\n      }\n\n      let lastOccurrence = sectionToConsider.lastIndexOf('1');\n\n      // handle cases of multiple highlight overlaps\n      let nextOccurrence = sectionToConsider.indexOf('1', firstOccurrence+1);\n      while(nextOccurrence !== -1) {\n        if(nextOccurrence - firstOccurrence > 1) {\n          renders.push([start+firstOccurrence+1, start+nextOccurrence, color, priority]);\n        }\n        firstOccurrence = nextOccurrence;\n        nextOccurrence = sectionToConsider.indexOf('1', firstOccurrence+1);\n      }\n\n      if(lastOccurrence < sectionToConsider.length-1) {\n        renders.push([start+lastOccurrence+1, end, color, priority]);\n      }\n    }\n    spotsFilled = spotsFilled.substring(0, start) + '1'.repeat(end-start) + spotsFilled.substring(end);\n  }\n  return renders;\n}\n\n/**\n * This function takes a set of highlight renders\n * and returns HTML code to represent the highlights.\n * The highlight renders must not have overlaps.\n *\n * @param {string} string - The phrase to be highlighted.\n * @param {Array.<Array.<Number, Number, String, Number>>} sections\n *\n * Highlight renders are represented by [start, end, color, priority].\n *\n * @return {string} HTML markup representing the highlighted phrase.\n */\nconst getHighlightedText = (string, sections) => {\n  // sort sections by increasing startOffset\n  sections.sort((a,b) => a[0] - b[0]);\n\n  // append each section with their highlights\n  let result = [];\n  let currentIndex = 0;\n  for(let i = 0; i < sections.length; i++) {\n    let [start, end, color, priority] = sections[i];\n    let section = string.substring(currentIndex, start);\n    section += `<span class=\"render-${priority}\"` +\n               ` style=\"background-color:${color}\">` +\n               `${string.substring(start, end)}</span>`;\n    result.push(section);\n    currentIndex = end;\n  }\n  result.push(string.substring(currentIndex));\n  return result.join('');\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}